---
title: "nasapower"
author: "Adam H Sparks"
output:
  rmarkdown::html_vignette:
    toc: true
vignette: >
  %\VignetteIndexEntry{nasapower}
  %\VignetteEngine{knitr::rmarkdown_notangle}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(collapse = TRUE,
                      comment = "#>",
                      fig.width = 7,
                      fig.height = 7,
                      fig.align = "center",
                      fig.path = "vignettes/")
```

## Introduction

_nasapower_ aims to make it quick and easy to automate downloading NASA [POWER](https://power.larc.nasa.gov) global meteorology, surface solar energy and climatology data  data in your R session as a tidy data frame for analysis and use in modelling or other purposes using `get_power()`.
POWER (Prediction Of Worldwide Energy Resource) data are freely available for download through a web interface with a spatial resolution of 0.5 x 0.625 degree latitude and longitude for meteorology and  1 x 1 degree latitude and longitude for solar parameters with various temporal resolutions depending on the POWER parameter and community.

## Using get_power() to fetch POWER data

The `get_power()` function has eight possible arguments and returns a data frame with a metadata header in the current R session.

### Example fetching daily data for a single point

Fetch daily "AG" community temperature, relative humidity and precipitation for January 1985 for Kingsthorpe, Queensland, Australia.

```{r get-ag}
library(nasapower)
daily_single_ag <- get_power(
  community = "AG",
  lonlat = c(151.81, -27.48),
  pars = c("RH2M", "T2M", "PRECTOTCORR"),
  dates = c("1985-01-01", "1985-01-31"),
  temporal_api = "daily"
)

daily_single_ag
```

### Example fetching daily data for an area

Fetch daily "ag" community relative humidity and temperature for south east Queensland region.

```{r daily-region}
daily_region_ag <- get_power(
  community = "ag",
  lonlat = c(150.5, -28.5 , 153.5, -25.5),
  pars = c("RH2M", "T2M"),
  dates = c("1985-01-01", "1985-01-02"),
  temporal_api = "daily"
)

daily_region_ag
```

### Example fetching interannual data for an area

Fetch interannual solar cooking parameters for south east Queensland region.

```{r interannual}
interannual_re <- get_power(
  community = "re",
  lonlat = c(150.5, -28.5 , 153.5, -25.5),
  dates = c("1984", "1985"),
  temporal_api = "monthly",
  pars = c("CLRSKY_SFC_SW_DWN",
           "ALLSKY_SFC_SW_DWN")
)

interannual_sse
```

### Example fetching climatology data

Global data are only available for the climatology `temporal_api`, setting this argument as such will fetch global data.

Fetch global "ag" climatology for temperature and relative humidity.

```{r get-climatology}
climatology_ag <- get_power(
  community = "ag",
  pars = c("T2M", "RH2M"),
  lonlat = "global",
  temporal_api = "climatology"
)

climatology_ag
```

_Note_ the associated metadata in the data frame header are not saved if the data are exported to a file format other than an R data format, _e.g._, .Rdata, .rda or .rds.

### Description of parameters for get_power()

- `community`, a text string with valid values of: "AG" (Agroclimatology), "re" (Surface meteorology and Solar Energy) or "SB" (Sustainable Buildings).
The selected user community will affect the units of the parameter and the temporal display of time series data (_e.g._, "AG" will use MJ/m^2^/day for radiation units, while re and SB use kW/m^2^/day as units).

- `lonlat`, A numeric vector of geographic coordinates for a cell or region entered as x, y coordinates. Not used when `temporal_api` is set to "climatology".

    - _For a single point_ To get a specific cell, 1/2 x 1/2 degree, supply a length-two numeric vector giving the decimal degree longitude and latitude in that order for data to download,  _e.g._, `lonlat = c(-89.5, -179.5)`.

    - _For regional coverage_ To get a region, supply a length-four numeric vector as lower left (lon, lat) and upper right (lon, lat) coordinates, _e.g._, `lonlat = c(xmin, ymin, xmax, ymax)` in that order for a given region, _e.g._, a bounding box\* for the south-western corner of Australia: `lonlat = c(112.5, -55.5, 115.5, -50.5)`.
      \*Note: Max bounding box is 10 x 10 degrees* of 1/2 x 1/2 degree data, _i.e._, 100 points maximum in total.

- `pars`. A character vector of parameters to download.
  If downloading "climatology" a maximum of 3 `pars` can be specified at one time, for "hourly", "daily" and "monthly" a maximum of 20 can be specified at one time.

- `dates`, a vector of start and end dates for which to query the POWER API, _e.g._, `dates = c("1983-01-01", "2017-12-31")`.

- `temporal_api`, a character vector of the desired temporal average(s).
  Valid values are "hourly", "daily", "monthly" and "climatology".

## Interrogating the parameters list

The `parameters` object is an R list that is distributed with this package.
The best way to view the contents is to check the names first.

```{r parameter-names}
head(names(parameters))
```

And then further interrogate the list when you find the parameter(s) of interest, which will return the values for that list item including the full name, units, definition and the temporal availability.
Here we can see that `T2M`, temperature at two metres, is available for "CLIMATOLOGY", "MONTHLY", "DAILY", and "HOURLY" temporal APIs and is defined as
>"The average air (dry bulb) temperature at 2 meters above the surface of the earth."
in units of Celsius (C) for all three communities, AG, SB and RE.

```{r t2m}
parameters$T2M
```

## References

<https://power.larc.nasa.gov>

<https://power.larc.nasa.gov/docs/methodology/>
